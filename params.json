{"name":"BAC0","tagline":"BAC0 - Library depending on BACpypes (Python 3) to build automation script for bacnet applications","body":"BAC0 is a Python 3 scripting application that uses BACpypes to process bacnet messages on a IP network. \r\nThis library brings out simple commands to browse a bacnet network, read properties from bacnet devices or write to them.\r\n\r\nPython is a simple language to learn and a very powerful tool for data processing. Coupled to bacnet, it becomes a great \r\ntool to test devices an interact with controllers.\r\n\r\nTest driven development (TDD) for DDC controls\r\n----------------------------------------------\r\nBAC0 allows users to simply test an application even if sensors are not connected to the controller. Using the out_of_service\r\nproperty, it's easy to write a value to the input so the controller will think an input is conencted. \r\n\r\nWithout a program like BAC0, you can rely on your DDC programming tool... but it is often slow and\r\nevery test must be done manually.\r\n\r\nNow you can write your test and run them as often as you want.\r\n\r\nHow to use it\r\n-------------\r\n\r\nExample::\r\n\r\n    import BAC0\r\n    bacnet = ReadWriteScript()\r\n    # Define a controller (this one is on MSTP #3, MAC addr 4, device ID 5504)    \r\n    mycontroller = BAC0.device('3:4', 5504, bacnet)\r\n    # Simulate an input (out_of_service -> true)\r\n    # Use 10 as the value for pointName\r\n    mycontroller.sim('pointName 10')\r\n    # Release the simulation\r\n    mycontroller.release('pointName')\r\n    # Release all simulated points\r\n    mycontroller.releaseAll()\r\n    # Write to a point\r\n    mycontroller.write('pointName active')\r\n    # Write to relinquish default\r\n    mycontroller.default('pointName 120')\r\n    # Read\r\n    mycontroller.read('pointName can be more than one word')\r\n\r\nNow you can build simple tests using assert syntax for example and make your DDC code stronger.\r\n\r\nWhere to download\r\n-----------------\r\nhttp://christiantremblay.github.io/BAC0/\r\n\r\nWhat you need\r\n-------------\r\nBAC0 is based on BACpypes found here::\r\n\r\n    git clone https://github.com/JoelBender/bacpypes.git\r\n\r\nBacpypes is now available for python 2.5, 2.7 and 3.4. You can also download it using Pypy.\r\n\r\nYou will also need Pandas as data processing is so easier with this !\r\n\r\nIf running Python on Windows, I recommend the use of complete distributions like Anaconda or Enthought Canopy.\r\n\r\nHow to install BAC0\r\n-------------------\r\nOnce the repo has been cloned, use::\r\n\r\n    python setup.py install\r\n\r\nDemo in a Jupyter Notebook\r\n--------------------------\r\nWhen installed, module can be used to script communication with bacnet device.\r\nJupyter Notebooks are an excellent way to test it\r\n\r\nhttps://github.com/ChristianTremblay/BAC0/blob/master/Jupyter/BAC0.ipynb\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}